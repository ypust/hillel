{"name": "Test adding a new user", "status": "broken", "statusDetails": {"message": "TypeError: can only concatenate str (not \"int\") to str", "trace": "self = <test_web_pages.TestWebPages object at 0x10fab00d0>\nplaywright = <playwright._impl._playwright.Playwright object at 0x10fab0d30>\n\n    @allure.title('Test adding a new user')\n    @allure.description('Test user can add a new user')\n    def test_adding_new_user(self, playwright):\n>       playwright, browser, context, page = playwright\n\ntest_web_pages.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:15258: in __getitem__\n    return mapping.from_impl(self._impl_obj.__getitem__(value=value))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._playwright.Playwright object at 0x10fab0d30>\nvalue = 0\n\n    def __getitem__(self, value: str) -> \"BrowserType\":\n        if value == \"chromium\":\n            return self.chromium\n        elif value == \"firefox\":\n            return self.firefox\n        elif value == \"webkit\":\n            return self.webkit\n>       raise ValueError(\"Invalid browser \" + value)\nE       TypeError: can only concatenate str (not \"int\") to str\n\n../../venv/lib/python3.10/site-packages/playwright/_impl/_playwright.py:65: TypeError"}, "description": "Test user can add a new user", "start": 1688030493686, "stop": 1688030493687, "uuid": "37a053f0-cfde-4398-be4b-3b354603e4aa", "historyId": "086ca3d283f2db044c5e931c5c2de64a", "testCaseId": "086ca3d283f2db044c5e931c5c2de64a", "fullName": "test_web_pages.TestWebPages#test_adding_new_user", "labels": [{"name": "story", "value": "Test Web Pages"}, {"name": "suite", "value": "test_web_pages"}, {"name": "subSuite", "value": "TestWebPages"}, {"name": "host", "value": "Julias-MacBook-Pro.local"}, {"name": "thread", "value": "38186-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_web_pages"}]}